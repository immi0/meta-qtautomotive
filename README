This README file contains information on the contents of the
Qt automotive layer.

based on instructions from here: 
https://medium.com/@shigmas/yocto-pi-and-qt-e9f2df38a610
and code from here:
http://code.qt.io/cgit/yocto/meta-boot2qt.git/

The purpose of the recipe is to build Yocto image on latest Ubuntu (mine is 17.19 at the moment) and latest Yocto branch (currently "rocko")

Intructions how to build:

1. Create working folder
$ mkdir yoctoproject (or name as you wish)
$ cd yoctoproject

2. Clone all necessary code
$ git clone -b rocko git://git.yoctoproject.org/poky
$ git clone -b rocko git://git.openembedded.org/meta-openembedded
$ git clone -b rocko git://git.yoctoproject.org/meta-raspberrypi
$ git clone -b rocko https://github.com/meta-qt5/meta-qt5.git

clone this repo along with the other 

make sure you are not behind proxy, otherwise google instructions on how to make git working behind the proxies

3. Run:
$ source poky/oe-init-build-env

this will create "build" folder in your yoctoproject folder

4. Edit configuration files in build/conf folder:
  a) make sure bblayers.conf looks like this:
  # POKY_BBLAYERS_CONF_VERSION is increased each time build/conf/bblayers.conf
  # changes incompatibly
  POKY_BBLAYERS_CONF_VERSION = "2"
  
  BBPATH = "${TOPDIR}"
  BBFILES ?= ""
  
  BBLAYERS ?= " \
    /home/local/VCCNET/vstelmak/rpiyocto/poky/meta \
    /home/local/VCCNET/vstelmak/rpiyocto/poky/meta-poky \
    /home/local/VCCNET/vstelmak/rpiyocto/meta-openembedded/meta-oe \
    /home/local/VCCNET/vstelmak/rpiyocto/meta-openembedded/meta-multimedia \
    /home/local/VCCNET/vstelmak/rpiyocto/meta-openembedded/meta-networking \
    /home/local/VCCNET/vstelmak/rpiyocto/meta-openembedded/meta-python \
    /home/local/VCCNET/vstelmak/rpiyocto/meta-raspberrypi \
    /home/local/VCCNET/vstelmak/rpiyocto/meta-qt5 \
    /home/local/VCCNET/vstelmak/rpiyocto/meta-qtautomotive \  
  "
  b) edit local.conf:
    change MACHINE to
    MACHINE ??= "raspberrypi3"
    
    if you want to have com port enabled, add
    ENABLE_UART = "1"
    
    to setup GPU memory size:
    GPU_MEM = "128"

5. Start baking
    bitbake qt5-automotive-image

  
